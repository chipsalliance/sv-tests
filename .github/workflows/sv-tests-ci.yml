name: sv-tests-ci

on:
  push:
    branches:
      - master
  pull_request:
  schedule:
    - cron: '0 1 * * *' # run daily at 01:00 am (UTC)

jobs:
  Run:
    strategy:
      fail-fast: false
      matrix:
        env:
          - { JOB_NAME: iverilog,            MAKEFLAGS: -j4 }
          - { JOB_NAME: moore,               MAKEFLAGS: -j4 }
          - { JOB_NAME: odin_ii,             MAKEFLAGS: -j4, USE_CHANNEL: conda-forge pkgw-forge }
          - { JOB_NAME: slang,               MAKEFLAGS: -j4, USE_CHANNEL: conda-forge }
          - { JOB_NAME: sv-parser,           MAKEFLAGS: -j4 }
          - { JOB_NAME: surelog,             MAKEFLAGS: -j4 }
          - { JOB_NAME: tree-sitter-verilog, MAKEFLAGS: -j4 }
          - { JOB_NAME: yosys,               MAKEFLAGS: -j4 }
          - { JOB_NAME: verible,             MAKEFLAGS: -j4 }
          - { JOB_NAME: verilator,           MAKEFLAGS: -j4 }
          - { JOB_NAME: verilator-uhdm,      MAKEFLAGS: -j4 RUNNERS_FILTER=UhdmVerilator }
          - { JOB_NAME: yosys-uhdm,          MAKEFLAGS: -j4 RUNNERS_FILTER=UhdmYosys }
          - { JOB_NAME: zachjs-sv2v,         MAKEFLAGS: -j4, USE_CHANNEL: conda-forge }

    name: ${{ matrix.env.JOB_NAME }}
    env: ${{ matrix.env }}
    runs-on: [self-hosted, Linux, X64]
    container: ubuntu:latest
    steps:
      - name: Cancel previous
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup python
        run: |
          apt-get update -qq
          apt install -y python3 python3-pip git wget
          update-alternatives --install /usr/bin/python python /usr/bin/python3 1
          update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 1
      - name: Install
        run:
          ./.github/workflows/install.sh ${{ matrix.env.MAKEFLAGS }}
      - name: Run
        run:
          ./.github/workflows/run.sh ${{ matrix.env.MAKEFLAGS }}
      - name: Prepare Report
        run:
          ./.github/workflows/tool_report_prepare.sh
      - name: Pack results
        run: |
          tar -cvf out_${{ matrix.env.JOB_NAME }}.tar ./out/report/${{ matrix.env.JOB_NAME }}_report.csv ./out/logs/
      - uses: actions/upload-artifact@v2
        with:
          name: report_${{ matrix.env.JOB_NAME }}
          path: |
            out_${{ matrix.env.JOB_NAME }}.tar
            **/plot_*.svg

  Summary:
    name: Summary
    runs-on: [self-hosted, Linux, X64]
    container: ubuntu:latest
    needs: Run
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup python
        run: |
          apt-get update -qq
          apt install -y python3 python3-pip wget git curl jq
          update-alternatives --install /usr/bin/python python /usr/bin/python3 1
          update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 1
      - name: Prepare output directories
        run: |
          mkdir -p out/report
      - uses: actions/download-artifact@v2
        with:
          path: ./out/
      - name: Extract
        run: |
          for file in $(find out/ -name *.tar -print); do tar -xf $file --strip-components=2 -C $(dirname $file); done
      - name: Summary
        run: |
          ./.github/workflows/summary.sh
          ./.github/workflows/report.sh
      - name: Update sv-tests-results repository
        if: github.ref == 'refs/heads/master'
        run: |
          eval $(ssh-agent -s)
          ssh-add - <<< "${{ secrets.REPORT_DEPLOY_KEY }}"
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          ./.github/workflows/update_report.sh
      - name: Prepare artifacts for PR commenter
        if: github.event_name == 'pull_request'
        run: |
          mkdir tests_summary
          echo ${{ github.event.number }} > tests_summary/issue_num
          SUITE_INFO=`curl -s https://api.github.com/repos/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}`
          SUITE_ID=`echo $SUITE_INFO | jq -r '.check_suite_id'`
          echo $SUITE_ID > tests_summary/suite_id
          cp out/report/history/report.csv tests_summary/report_base.csv
          cp out/report/report.csv tests_summary/report_new.csv
          cp out/report/new_*csv tests_summary/
          cp out/report/tests_summary.json tests_summary/
          cp out/report/tests_summary.md tests_summary/
          find out -name plot_*.svg -exec cp {} tests_summary/ \;
      - name: Upload artifacts for summary
        uses: actions/upload-artifact@v2
        if: github.event_name == 'pull_request'
        with:
          name: tests_summary
          path: |
            ./tests_summary/
      - name: Find artifacts that are no longer needed
        id: get-artifacts-to-delete
        if: github.event_name == 'pull_request'
        run: |
          artifacts=$(find ./out -type d -name 'report_*' -exec basename {} \;)
          echo $artifacts
          artifacts="${artifacts//'%'/'%25'}"
          artifacts="${artifacts//$'\n'/'%0A'}"
          artifacts="${artifacts//$'\r'/'%0D'}"
          echo ::set-output name=artifacts::$artifacts
          echo $artifacts
      - name: Delete Old Artifacts
        if: github.event_name == 'pull_request'
        uses: geekyeggo/delete-artifact@v1
        with:
          name: ${{ steps.get-artifacts-to-delete.outputs.artifacts }}
