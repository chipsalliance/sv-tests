#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# Copyright (C) 2020 The SymbiFlow Authors.
#
# Use of this source code is governed by a ISC-style
# license that can be found in the LICENSE file or at
# https://opensource.org/licenses/ISC
#
# SPDX-License-Identifier: ISC

import os
import sys
import glob
import re

templ = """/*
:name: rsd
:description: Full RSD core test
:files: {0}
:incdirs: {1}
:tags: rsd
:top_module: Core
:results_group: cores
:timeout: 100
*/
"""

try:
    third_party_dir = os.environ['THIRD_PARTY_DIR']
    tests_dir = os.environ['TESTS_DIR']
    conf_dir = os.environ['CONF_DIR']
except KeyError:
    print("Export the THIRD_PARTY_DIR, TESTS_DIR and CONF_DIR variables first")
    sys.exit(1)

try:
    tests_subdir = sys.argv[1]
except IndexError:
    print("Usage: ./generator <subdir>")
    sys.exit(1)

rsd_path = os.path.abspath(
    os.path.join(third_party_dir, "cores", "rsd", "Processor", "Src"))
rsd_core_make = os.path.join(rsd_path, "Makefiles", "CoreSources.inc.mk")

test_dir = os.path.join(tests_dir, 'generated', tests_subdir)

if not os.path.isdir(test_dir):
    os.makedirs(test_dir, exist_ok=True)

test_file = os.path.join(test_dir, "rsd.sv")

sources = os.path.abspath(test_file) + ' '
incdirs = os.path.join(rsd_path, "") + ' '

with open(rsd_core_make, "r") as f:
    in_source_list = False
    for line in f.readlines():
        line = re.sub(r"#.+[\n\r]$", "", line)  # Remove comments

        # Find lines starting with "TYPES|CORE_MODULES=" and not ending with "\".
        m = re.search(r"^(TYPES|CORE_MODULES)[\s]*=(.+)$", line)
        if m:
            line = m.group(2)  # Remove TYPES|CORE_MODULES=
            in_source_list = True

        if in_source_list:
            # Find the end of source list
            m = re.search(r"\\[\n\r]*$", line)
            if not m:
                in_source_list = False
            # Remove backslash and spaces
            line = re.sub(r"\\[\n\r]*$", "", line)
            line = line.strip()
            if (line != ""):
                for i in line.split(r"\s+"):
                    sources += os.path.join(rsd_path, i) + ' '

with open(test_file, "w") as f:
    f.write(templ.format(sources, incdirs))
    f.write("`define RSD_SYNTHESIS\n")
    f.write("`define RSD_SYNTHESIS_DESIGN_COMPILER\n")
    f.write("`define RSD_MARCH_FP_PIPE\n")
